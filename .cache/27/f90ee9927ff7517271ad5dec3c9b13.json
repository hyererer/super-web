{"id":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","dependencies":[{"name":"C:\\Users\\szb15\\will-it-miss\\package.json","includedInParent":true,"mtime":1667963388292},{"name":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\package.json","includedInParent":true,"mtime":1667963073346},{"name":"../selector","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\hacks\\placeholder-shown.js","resolved":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\selector.js"}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar Selector = require('../selector');\nvar PlaceholderShown = /*#__PURE__*/function (_Selector) {\n  _inherits(PlaceholderShown, _Selector);\n  var _super = _createSuper(PlaceholderShown);\n  function PlaceholderShown() {\n    _classCallCheck(this, PlaceholderShown);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PlaceholderShown, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Return different selectors depend on prefix\n     */\n    function prefixed(prefix) {\n      if (prefix === '-ms-') {\n        return ':-ms-input-placeholder';\n      }\n      return \":\".concat(prefix, \"placeholder-shown\");\n    }\n  }]);\n  return PlaceholderShown;\n}(Selector);\nPlaceholderShown.names = [':placeholder-shown'];\nmodule.exports = PlaceholderShown;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":12,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":1,"column":4},"name":"Selector"},{"generated":{"line":12,"column":12},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":1,"column":12}},{"generated":{"line":12,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":1,"column":15},"name":"require"},{"generated":{"line":12,"column":22},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":1,"column":22}},{"generated":{"line":12,"column":23},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":1,"column":23}},{"generated":{"line":12,"column":36},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":1,"column":36}},{"generated":{"line":12,"column":37},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":1,"column":37}},{"generated":{"line":13,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":1,"column":37}},{"generated":{"line":13,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":6},"name":"PlaceholderShown"},{"generated":{"line":13,"column":20},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":14,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":15,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":16,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":17,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":18,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":19,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":20,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":21,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":22,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":22}},{"generated":{"line":23,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":4,"column":2}},{"generated":{"line":24,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":5,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":6,"column":0}},{"generated":{"line":26,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":7,"column":2}},{"generated":{"line":26,"column":22},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":7,"column":11},"name":"prefix"},{"generated":{"line":26,"column":28},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":7,"column":17}},{"generated":{"line":26,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":7,"column":19}},{"generated":{"line":27,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":8,"column":4}},{"generated":{"line":27,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":8,"column":8},"name":"prefix"},{"generated":{"line":27,"column":16},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":8,"column":14}},{"generated":{"line":27,"column":21},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":8,"column":19}},{"generated":{"line":27,"column":27},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":8,"column":25}},{"generated":{"line":27,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":8,"column":27}},{"generated":{"line":28,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":9,"column":6}},{"generated":{"line":28,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":9,"column":13}},{"generated":{"line":28,"column":39},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":9,"column":37}},{"generated":{"line":29,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":10,"column":4}},{"generated":{"line":30,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":11,"column":4}},{"generated":{"line":30,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":11,"column":15},"name":"prefix"},{"generated":{"line":30,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":11,"column":21}},{"generated":{"line":31,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":12,"column":2}},{"generated":{"line":32,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":12,"column":3}},{"generated":{"line":33,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":12,"column":3}},{"generated":{"line":34,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":12,"column":3}},{"generated":{"line":34,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":31},"name":"Selector"},{"generated":{"line":34,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":3,"column":39}},{"generated":{"line":35,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":15,"column":0},"name":"PlaceholderShown"},{"generated":{"line":35,"column":16},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":15,"column":16}},{"generated":{"line":35,"column":17},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":15,"column":17},"name":"names"},{"generated":{"line":35,"column":22},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":15,"column":22}},{"generated":{"line":35,"column":25},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":15,"column":25}},{"generated":{"line":35,"column":26},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":15,"column":26}},{"generated":{"line":35,"column":46},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":15,"column":46}},{"generated":{"line":35,"column":47},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":15,"column":47}},{"generated":{"line":36,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":17,"column":0},"name":"module"},{"generated":{"line":36,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":17,"column":6}},{"generated":{"line":36,"column":7},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":17,"column":7},"name":"exports"},{"generated":{"line":36,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":17,"column":14}},{"generated":{"line":36,"column":17},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":17,"column":17},"name":"PlaceholderShown"},{"generated":{"line":36,"column":33},"source":"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js","original":{"line":17,"column":33}}],"sources":{"../node_modules/autoprefixer/lib/hacks/placeholder-shown.js":"let Selector = require('../selector')\n\nclass PlaceholderShown extends Selector {\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-ms-') {\n      return ':-ms-input-placeholder'\n    }\n    return `:${prefix}placeholder-shown`\n  }\n}\n\nPlaceholderShown.names = [':placeholder-shown']\n\nmodule.exports = PlaceholderShown\n"},"lineCount":null}},"error":null,"hash":"c9dbed0286831b63a5f5ea31988494c4","cacheData":{"env":{}}}