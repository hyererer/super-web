{"id":"../node_modules/autoprefixer/lib/at-rule.js","dependencies":[{"name":"C:\\Users\\szb15\\will-it-miss\\package.json","includedInParent":true,"mtime":1667963388292},{"name":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\package.json","includedInParent":true,"mtime":1667963073346},{"name":"./prefixer","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\at-rule.js","resolved":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\prefixer.js"}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar Prefixer = require('./prefixer');\nvar AtRule = /*#__PURE__*/function (_Prefixer) {\n  _inherits(AtRule, _Prefixer);\n  var _super = _createSuper(AtRule);\n  function AtRule() {\n    _classCallCheck(this, AtRule);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AtRule, [{\n    key: \"add\",\n    value:\n    /**\n     * Clone and add prefixes for at-rule\n     */\n    function add(rule, prefix) {\n      var prefixed = prefix + rule.name;\n      var already = rule.parent.some(function (i) {\n        return i.name === prefixed && i.params === rule.params;\n      });\n      if (already) {\n        return undefined;\n      }\n      var cloned = this.clone(rule, {\n        name: prefixed\n      });\n      return rule.parent.insertBefore(rule, cloned);\n    }\n\n    /**\n     * Clone node with prefixes\n     */\n  }, {\n    key: \"process\",\n    value: function process(node) {\n      var parent = this.parentPrefix(node);\n      var _iterator = _createForOfIteratorHelper(this.prefixes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var prefix = _step.value;\n          if (!parent || parent === prefix) {\n            this.add(node, prefix);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n  return AtRule;\n}(Prefixer);\nmodule.exports = AtRule;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":15,"column":0},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":1,"column":0}},{"generated":{"line":15,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":1,"column":4},"name":"Prefixer"},{"generated":{"line":15,"column":12},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":1,"column":12}},{"generated":{"line":15,"column":15},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":1,"column":15},"name":"require"},{"generated":{"line":15,"column":22},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":1,"column":22}},{"generated":{"line":15,"column":23},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":1,"column":23}},{"generated":{"line":15,"column":35},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":1,"column":35}},{"generated":{"line":15,"column":36},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":1,"column":36}},{"generated":{"line":16,"column":0},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":1,"column":36}},{"generated":{"line":16,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":6},"name":"AtRule"},{"generated":{"line":16,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":17,"column":2},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":18,"column":2},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":19,"column":2},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":20,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":21,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":22,"column":2},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":23,"column":2},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":24,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":25,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":12}},{"generated":{"line":26,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":4,"column":2}},{"generated":{"line":27,"column":0},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":5,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":6,"column":0}},{"generated":{"line":29,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":7,"column":2}},{"generated":{"line":29,"column":17},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":7,"column":6},"name":"rule"},{"generated":{"line":29,"column":21},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":7,"column":10}},{"generated":{"line":29,"column":23},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":7,"column":12},"name":"prefix"},{"generated":{"line":29,"column":29},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":7,"column":18}},{"generated":{"line":29,"column":31},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":7,"column":20}},{"generated":{"line":30,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":8,"column":4}},{"generated":{"line":30,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":8,"column":8},"name":"prefixed"},{"generated":{"line":30,"column":18},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":8,"column":16}},{"generated":{"line":30,"column":21},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":8,"column":19},"name":"prefix"},{"generated":{"line":30,"column":27},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":8,"column":25}},{"generated":{"line":30,"column":30},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":8,"column":28},"name":"rule"},{"generated":{"line":30,"column":34},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":8,"column":32}},{"generated":{"line":30,"column":35},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":8,"column":33},"name":"name"},{"generated":{"line":30,"column":39},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":8,"column":37}},{"generated":{"line":31,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":10,"column":4}},{"generated":{"line":31,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":10,"column":8},"name":"already"},{"generated":{"line":31,"column":17},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":10,"column":15}},{"generated":{"line":31,"column":20},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":10,"column":18},"name":"rule"},{"generated":{"line":31,"column":24},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":10,"column":22}},{"generated":{"line":31,"column":25},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":10,"column":23},"name":"parent"},{"generated":{"line":31,"column":31},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":10,"column":29}},{"generated":{"line":31,"column":32},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":10,"column":30},"name":"some"},{"generated":{"line":31,"column":36},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":10,"column":34}},{"generated":{"line":31,"column":37},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":6}},{"generated":{"line":31,"column":47},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":6},"name":"i"},{"generated":{"line":31,"column":48},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":7}},{"generated":{"line":32,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":7}},{"generated":{"line":32,"column":15},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":11},"name":"i"},{"generated":{"line":32,"column":16},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":12}},{"generated":{"line":32,"column":17},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":13},"name":"name"},{"generated":{"line":32,"column":21},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":17}},{"generated":{"line":32,"column":26},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":22},"name":"prefixed"},{"generated":{"line":32,"column":34},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":30}},{"generated":{"line":32,"column":38},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":34},"name":"i"},{"generated":{"line":32,"column":39},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":35}},{"generated":{"line":32,"column":40},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":36},"name":"params"},{"generated":{"line":32,"column":46},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":42}},{"generated":{"line":32,"column":51},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":47},"name":"rule"},{"generated":{"line":32,"column":55},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":51}},{"generated":{"line":32,"column":56},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":52},"name":"params"},{"generated":{"line":32,"column":62},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":58}},{"generated":{"line":33,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":11,"column":58}},{"generated":{"line":33,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":12,"column":5}},{"generated":{"line":34,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":13,"column":4}},{"generated":{"line":34,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":13,"column":8},"name":"already"},{"generated":{"line":34,"column":17},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":13,"column":15}},{"generated":{"line":34,"column":19},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":13,"column":17}},{"generated":{"line":35,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":14,"column":6}},{"generated":{"line":35,"column":15},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":14,"column":13},"name":"undefined"},{"generated":{"line":35,"column":24},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":14,"column":22}},{"generated":{"line":36,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":15,"column":4}},{"generated":{"line":37,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":4}},{"generated":{"line":37,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":8},"name":"cloned"},{"generated":{"line":37,"column":16},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":14}},{"generated":{"line":37,"column":19},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":17}},{"generated":{"line":37,"column":23},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":21}},{"generated":{"line":37,"column":24},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":22},"name":"clone"},{"generated":{"line":37,"column":29},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":27}},{"generated":{"line":37,"column":30},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":28},"name":"rule"},{"generated":{"line":37,"column":34},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":32}},{"generated":{"line":37,"column":36},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":34}},{"generated":{"line":38,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":36},"name":"name"},{"generated":{"line":38,"column":12},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":40}},{"generated":{"line":38,"column":14},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":42},"name":"prefixed"},{"generated":{"line":39,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":51}},{"generated":{"line":39,"column":7},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":52}},{"generated":{"line":39,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":17,"column":53}},{"generated":{"line":40,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":4}},{"generated":{"line":40,"column":13},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":11},"name":"rule"},{"generated":{"line":40,"column":17},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":15}},{"generated":{"line":40,"column":18},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":16},"name":"parent"},{"generated":{"line":40,"column":24},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":22}},{"generated":{"line":40,"column":25},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":23},"name":"insertBefore"},{"generated":{"line":40,"column":37},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":35}},{"generated":{"line":40,"column":38},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":36},"name":"rule"},{"generated":{"line":40,"column":42},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":40}},{"generated":{"line":40,"column":44},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":42},"name":"cloned"},{"generated":{"line":40,"column":50},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":48}},{"generated":{"line":40,"column":51},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":18,"column":49}},{"generated":{"line":41,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":19,"column":2}},{"generated":{"line":43,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":21,"column":2}},{"generated":{"line":44,"column":0},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":22,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":23,"column":0}},{"generated":{"line":46,"column":2},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":21,"column":2}},{"generated":{"line":47,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":21,"column":2}},{"generated":{"line":48,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":21,"column":2}},{"generated":{"line":48,"column":11},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":24,"column":2}},{"generated":{"line":48,"column":28},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":24,"column":10},"name":"node"},{"generated":{"line":48,"column":32},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":24,"column":14}},{"generated":{"line":48,"column":34},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":24,"column":16}},{"generated":{"line":49,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":4}},{"generated":{"line":49,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":8},"name":"parent"},{"generated":{"line":49,"column":16},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":14}},{"generated":{"line":49,"column":19},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":17}},{"generated":{"line":49,"column":23},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":21}},{"generated":{"line":49,"column":24},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":22},"name":"parentPrefix"},{"generated":{"line":49,"column":36},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":34}},{"generated":{"line":49,"column":37},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":35},"name":"node"},{"generated":{"line":49,"column":41},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":39}},{"generated":{"line":49,"column":42},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":40}},{"generated":{"line":50,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":25,"column":40}},{"generated":{"line":50,"column":49},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":23}},{"generated":{"line":50,"column":53},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":27}},{"generated":{"line":50,"column":54},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":28},"name":"prefixes"},{"generated":{"line":50,"column":62},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":36}},{"generated":{"line":51,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":36}},{"generated":{"line":52,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":36}},{"generated":{"line":53,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":4}},{"generated":{"line":53,"column":60},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":38}},{"generated":{"line":54,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":38}},{"generated":{"line":54,"column":14},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":13},"name":"prefix"},{"generated":{"line":54,"column":20},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":27,"column":19}},{"generated":{"line":55,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":28,"column":6}},{"generated":{"line":55,"column":14},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":28,"column":10}},{"generated":{"line":55,"column":15},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":28,"column":11},"name":"parent"},{"generated":{"line":55,"column":21},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":28,"column":17}},{"generated":{"line":55,"column":25},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":28,"column":21},"name":"parent"},{"generated":{"line":55,"column":31},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":28,"column":27}},{"generated":{"line":55,"column":36},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":28,"column":32},"name":"prefix"},{"generated":{"line":55,"column":42},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":28,"column":38}},{"generated":{"line":55,"column":44},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":28,"column":40}},{"generated":{"line":56,"column":12},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":29,"column":8}},{"generated":{"line":56,"column":16},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":29,"column":12}},{"generated":{"line":56,"column":17},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":29,"column":13},"name":"add"},{"generated":{"line":56,"column":20},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":29,"column":16}},{"generated":{"line":56,"column":21},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":29,"column":17},"name":"node"},{"generated":{"line":56,"column":25},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":29,"column":21}},{"generated":{"line":56,"column":27},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":29,"column":23},"name":"prefix"},{"generated":{"line":56,"column":33},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":29,"column":29}},{"generated":{"line":56,"column":34},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":29,"column":30}},{"generated":{"line":57,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":30,"column":6}},{"generated":{"line":58,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":31,"column":4}},{"generated":{"line":59,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":31,"column":5}},{"generated":{"line":60,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":31,"column":5}},{"generated":{"line":61,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":31,"column":5}},{"generated":{"line":62,"column":8},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":31,"column":5}},{"generated":{"line":63,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":31,"column":5}},{"generated":{"line":64,"column":4},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":32,"column":2}},{"generated":{"line":65,"column":2},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":32,"column":3}},{"generated":{"line":66,"column":2},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":32,"column":3}},{"generated":{"line":67,"column":0},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":32,"column":3}},{"generated":{"line":67,"column":2},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":21},"name":"Prefixer"},{"generated":{"line":67,"column":10},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":3,"column":29}},{"generated":{"line":68,"column":0},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":35,"column":0},"name":"module"},{"generated":{"line":68,"column":6},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":35,"column":6}},{"generated":{"line":68,"column":7},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":35,"column":7},"name":"exports"},{"generated":{"line":68,"column":14},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":35,"column":14}},{"generated":{"line":68,"column":17},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":35,"column":17},"name":"AtRule"},{"generated":{"line":68,"column":23},"source":"../node_modules/autoprefixer/lib/at-rule.js","original":{"line":35,"column":23}}],"sources":{"../node_modules/autoprefixer/lib/at-rule.js":"let Prefixer = require('./prefixer')\n\nclass AtRule extends Prefixer {\n  /**\n   * Clone and add prefixes for at-rule\n   */\n  add(rule, prefix) {\n    let prefixed = prefix + rule.name\n\n    let already = rule.parent.some(\n      i => i.name === prefixed && i.params === rule.params\n    )\n    if (already) {\n      return undefined\n    }\n\n    let cloned = this.clone(rule, { name: prefixed })\n    return rule.parent.insertBefore(rule, cloned)\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node) {\n    let parent = this.parentPrefix(node)\n\n    for (let prefix of this.prefixes) {\n      if (!parent || parent === prefix) {\n        this.add(node, prefix)\n      }\n    }\n  }\n}\n\nmodule.exports = AtRule\n"},"lineCount":null}},"error":null,"hash":"b628c7d0c5f92c98a7243a6db107036e","cacheData":{"env":{}}}