{"id":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","dependencies":[{"name":"C:\\Users\\szb15\\will-it-miss\\package.json","includedInParent":true,"mtime":1667963388292},{"name":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\package.json","includedInParent":true,"mtime":1667963073346},{"name":"../declaration","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\hacks\\grid-row-column.js","resolved":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\declaration.js"},{"name":"./grid-utils","loc":{"line":2,"column":20,"index":64},"parent":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\hacks\\grid-row-column.js","resolved":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\hacks\\grid-utils.js"}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar Declaration = require('../declaration');\nvar utils = require('./grid-utils');\nvar GridRowColumn = /*#__PURE__*/function (_Declaration) {\n  _inherits(GridRowColumn, _Declaration);\n  var _super = _createSuper(GridRowColumn);\n  function GridRowColumn() {\n    _classCallCheck(this, GridRowColumn);\n    return _super.apply(this, arguments);\n  }\n  _createClass(GridRowColumn, [{\n    key: \"insert\",\n    value:\n    /**\n     * Translate grid-row / grid-column to separate -ms- prefixed properties\n     */\n    function insert(decl, prefix, prefixes) {\n      if (prefix !== '-ms-') return _get(_getPrototypeOf(GridRowColumn.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      var values = utils.parse(decl);\n      var _utils$translate = utils.translate(values, 0, 1),\n        _utils$translate2 = _slicedToArray(_utils$translate, 2),\n        start = _utils$translate2[0],\n        span = _utils$translate2[1];\n      var hasStartValueSpan = values[0] && values[0].includes('span');\n      if (hasStartValueSpan) {\n        span = values[0].join('').replace(/\\D/g, '');\n      }\n      ;\n      [[decl.prop, start], [\"\".concat(decl.prop, \"-span\"), span]].forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          prop = _ref2[0],\n          value = _ref2[1];\n        utils.insertDecl(decl, prop, value);\n      });\n      return undefined;\n    }\n  }]);\n  return GridRowColumn;\n}(Declaration);\nGridRowColumn.names = ['grid-row', 'grid-column'];\nmodule.exports = GridRowColumn;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":20,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":1,"column":0}},{"generated":{"line":20,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":1,"column":4},"name":"Declaration"},{"generated":{"line":20,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":1,"column":15}},{"generated":{"line":20,"column":18},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":1,"column":18},"name":"require"},{"generated":{"line":20,"column":25},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":1,"column":25}},{"generated":{"line":20,"column":26},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":1,"column":26}},{"generated":{"line":20,"column":42},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":1,"column":42}},{"generated":{"line":20,"column":43},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":1,"column":43}},{"generated":{"line":21,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":2,"column":0}},{"generated":{"line":21,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":2,"column":4},"name":"utils"},{"generated":{"line":21,"column":9},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":2,"column":9}},{"generated":{"line":21,"column":12},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":2,"column":12},"name":"require"},{"generated":{"line":21,"column":19},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":2,"column":19}},{"generated":{"line":21,"column":20},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":2,"column":20}},{"generated":{"line":21,"column":34},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":2,"column":34}},{"generated":{"line":21,"column":35},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":2,"column":35}},{"generated":{"line":22,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":2,"column":35}},{"generated":{"line":22,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":6},"name":"GridRowColumn"},{"generated":{"line":22,"column":17},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":23,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":24,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":25,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":26,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":27,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":28,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":29,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":30,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":31,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":19}},{"generated":{"line":32,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":5,"column":2}},{"generated":{"line":33,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":6,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":7,"column":0}},{"generated":{"line":35,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":8,"column":2}},{"generated":{"line":35,"column":20},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":8,"column":9},"name":"decl"},{"generated":{"line":35,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":8,"column":13}},{"generated":{"line":35,"column":26},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":8,"column":15},"name":"prefix"},{"generated":{"line":35,"column":32},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":8,"column":21}},{"generated":{"line":35,"column":34},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":8,"column":23},"name":"prefixes"},{"generated":{"line":35,"column":42},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":8,"column":31}},{"generated":{"line":35,"column":44},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":8,"column":33}},{"generated":{"line":36,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":4}},{"generated":{"line":36,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":8},"name":"prefix"},{"generated":{"line":36,"column":16},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":14}},{"generated":{"line":36,"column":21},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":19}},{"generated":{"line":36,"column":27},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":25}},{"generated":{"line":36,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":27}},{"generated":{"line":36,"column":110},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":47},"name":"decl"},{"generated":{"line":36,"column":114},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":51}},{"generated":{"line":36,"column":116},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":53},"name":"prefix"},{"generated":{"line":36,"column":122},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":59}},{"generated":{"line":36,"column":124},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":61},"name":"prefixes"},{"generated":{"line":36,"column":132},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":9,"column":69}},{"generated":{"line":37,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":4}},{"generated":{"line":37,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":8},"name":"values"},{"generated":{"line":37,"column":16},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":14}},{"generated":{"line":37,"column":19},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":17},"name":"utils"},{"generated":{"line":37,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":22}},{"generated":{"line":37,"column":25},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":23},"name":"parse"},{"generated":{"line":37,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":28}},{"generated":{"line":37,"column":31},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":29},"name":"decl"},{"generated":{"line":37,"column":35},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":33}},{"generated":{"line":37,"column":36},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":11,"column":34}},{"generated":{"line":38,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":4}},{"generated":{"line":38,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":24},"name":"utils"},{"generated":{"line":38,"column":34},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":29}},{"generated":{"line":38,"column":35},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":30},"name":"translate"},{"generated":{"line":38,"column":44},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":39}},{"generated":{"line":38,"column":45},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":40},"name":"values"},{"generated":{"line":38,"column":51},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":46}},{"generated":{"line":38,"column":53},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":48}},{"generated":{"line":38,"column":54},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":49}},{"generated":{"line":38,"column":56},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":51}},{"generated":{"line":38,"column":57},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":52}},{"generated":{"line":38,"column":58},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":53}},{"generated":{"line":39,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":53}},{"generated":{"line":40,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":9},"name":"start"},{"generated":{"line":40,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":14}},{"generated":{"line":41,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":16},"name":"span"},{"generated":{"line":41,"column":12},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":12,"column":20}},{"generated":{"line":42,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":4}},{"generated":{"line":42,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":8},"name":"hasStartValueSpan"},{"generated":{"line":42,"column":27},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":25}},{"generated":{"line":42,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":28},"name":"values"},{"generated":{"line":42,"column":36},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":34}},{"generated":{"line":42,"column":37},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":35}},{"generated":{"line":42,"column":38},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":36}},{"generated":{"line":42,"column":39},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":37}},{"generated":{"line":42,"column":43},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":41},"name":"values"},{"generated":{"line":42,"column":49},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":47}},{"generated":{"line":42,"column":50},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":48}},{"generated":{"line":42,"column":51},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":49}},{"generated":{"line":42,"column":52},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":50}},{"generated":{"line":42,"column":53},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":51},"name":"includes"},{"generated":{"line":42,"column":61},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":59}},{"generated":{"line":42,"column":62},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":60}},{"generated":{"line":42,"column":68},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":66}},{"generated":{"line":42,"column":69},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":14,"column":67}},{"generated":{"line":43,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":16,"column":4}},{"generated":{"line":43,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":16,"column":8},"name":"hasStartValueSpan"},{"generated":{"line":43,"column":27},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":16,"column":25}},{"generated":{"line":43,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":16,"column":27}},{"generated":{"line":44,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":6},"name":"span"},{"generated":{"line":44,"column":12},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":10}},{"generated":{"line":44,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":13},"name":"values"},{"generated":{"line":44,"column":21},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":19}},{"generated":{"line":44,"column":22},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":20}},{"generated":{"line":44,"column":23},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":21}},{"generated":{"line":44,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":22}},{"generated":{"line":44,"column":25},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":23},"name":"join"},{"generated":{"line":44,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":27}},{"generated":{"line":44,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":28}},{"generated":{"line":44,"column":32},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":30}},{"generated":{"line":44,"column":33},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":31}},{"generated":{"line":44,"column":34},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":32},"name":"replace"},{"generated":{"line":44,"column":41},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":39}},{"generated":{"line":44,"column":42},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":40}},{"generated":{"line":44,"column":47},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":45}},{"generated":{"line":44,"column":49},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":47}},{"generated":{"line":44,"column":51},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":49}},{"generated":{"line":44,"column":52},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":17,"column":50}},{"generated":{"line":45,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":18,"column":4}},{"generated":{"line":46,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":20,"column":4}},{"generated":{"line":47,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":20,"column":5}},{"generated":{"line":47,"column":7},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":21,"column":6}},{"generated":{"line":47,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":21,"column":7},"name":"decl"},{"generated":{"line":47,"column":12},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":21,"column":11}},{"generated":{"line":47,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":21,"column":12},"name":"prop"},{"generated":{"line":47,"column":17},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":21,"column":16}},{"generated":{"line":47,"column":19},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":21,"column":18},"name":"start"},{"generated":{"line":47,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":21,"column":23}},{"generated":{"line":47,"column":25},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":21,"column":24}},{"generated":{"line":47,"column":27},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":22,"column":6}},{"generated":{"line":47,"column":38},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":22,"column":10},"name":"decl"},{"generated":{"line":47,"column":42},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":22,"column":14}},{"generated":{"line":47,"column":43},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":22,"column":15},"name":"prop"},{"generated":{"line":47,"column":47},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":22,"column":19}},{"generated":{"line":47,"column":59},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":22,"column":28},"name":"span"},{"generated":{"line":47,"column":63},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":22,"column":32}},{"generated":{"line":47,"column":64},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":22,"column":33}},{"generated":{"line":47,"column":65},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":5}},{"generated":{"line":47,"column":66},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":6},"name":"forEach"},{"generated":{"line":47,"column":73},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":13}},{"generated":{"line":47,"column":74},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":14}},{"generated":{"line":47,"column":90},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":33}},{"generated":{"line":48,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":33}},{"generated":{"line":49,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":16},"name":"prop"},{"generated":{"line":49,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":20}},{"generated":{"line":50,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":22},"name":"value"},{"generated":{"line":50,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":23,"column":27}},{"generated":{"line":51,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":6},"name":"utils"},{"generated":{"line":51,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":11}},{"generated":{"line":51,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":12},"name":"insertDecl"},{"generated":{"line":51,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":22}},{"generated":{"line":51,"column":25},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":23},"name":"decl"},{"generated":{"line":51,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":27}},{"generated":{"line":51,"column":31},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":29},"name":"prop"},{"generated":{"line":51,"column":35},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":33}},{"generated":{"line":51,"column":37},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":35},"name":"value"},{"generated":{"line":51,"column":42},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":40}},{"generated":{"line":51,"column":43},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":24,"column":41}},{"generated":{"line":52,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":25,"column":4}},{"generated":{"line":52,"column":7},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":25,"column":5}},{"generated":{"line":52,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":25,"column":6}},{"generated":{"line":53,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":27,"column":4}},{"generated":{"line":53,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":27,"column":11},"name":"undefined"},{"generated":{"line":53,"column":22},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":27,"column":20}},{"generated":{"line":54,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":28,"column":2}},{"generated":{"line":55,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":28,"column":3}},{"generated":{"line":56,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":28,"column":3}},{"generated":{"line":57,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":28,"column":3}},{"generated":{"line":57,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":28},"name":"Declaration"},{"generated":{"line":57,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":4,"column":39}},{"generated":{"line":58,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":0},"name":"GridRowColumn"},{"generated":{"line":58,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":13}},{"generated":{"line":58,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":14},"name":"names"},{"generated":{"line":58,"column":19},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":19}},{"generated":{"line":58,"column":22},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":22}},{"generated":{"line":58,"column":23},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":23}},{"generated":{"line":58,"column":33},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":33}},{"generated":{"line":58,"column":35},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":35}},{"generated":{"line":58,"column":48},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":48}},{"generated":{"line":58,"column":49},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":31,"column":49}},{"generated":{"line":59,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":33,"column":0},"name":"module"},{"generated":{"line":59,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":33,"column":6}},{"generated":{"line":59,"column":7},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":33,"column":7},"name":"exports"},{"generated":{"line":59,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":33,"column":14}},{"generated":{"line":59,"column":17},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":33,"column":17},"name":"GridRowColumn"},{"generated":{"line":59,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/grid-row-column.js","original":{"line":33,"column":30}}],"sources":{"../node_modules/autoprefixer/lib/hacks/grid-row-column.js":"let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridRowColumn extends Declaration {\n  /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n    let [start, span] = utils.translate(values, 0, 1)\n\n    let hasStartValueSpan = values[0] && values[0].includes('span')\n\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '')\n    }\n\n    ;[\n      [decl.prop, start],\n      [`${decl.prop}-span`, span]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    return undefined\n  }\n}\n\nGridRowColumn.names = ['grid-row', 'grid-column']\n\nmodule.exports = GridRowColumn\n"},"lineCount":null}},"error":null,"hash":"f6fef3de309b6cfeabf9cba3f076d243","cacheData":{"env":{}}}