{"id":"../node_modules/autoprefixer/lib/hacks/image-set.js","dependencies":[{"name":"C:\\Users\\szb15\\will-it-miss\\package.json","includedInParent":true,"mtime":1667963388292},{"name":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\package.json","includedInParent":true,"mtime":1667963073346},{"name":"../value","loc":{"line":1,"column":20,"index":20},"parent":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\hacks\\image-set.js","resolved":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\value.js"}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar Value = require('../value');\nvar ImageSet = /*#__PURE__*/function (_Value) {\n  _inherits(ImageSet, _Value);\n  var _super = _createSuper(ImageSet);\n  function ImageSet() {\n    _classCallCheck(this, ImageSet);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ImageSet, [{\n    key: \"replace\",\n    value:\n    /**\n     * Use non-standard name for WebKit and Firefox\n     */\n    function replace(string, prefix) {\n      var fixed = _get(_getPrototypeOf(ImageSet.prototype), \"replace\", this).call(this, string, prefix);\n      if (prefix === '-webkit-') {\n        fixed = fixed.replace(/(\"[^\"]+\"|'[^']+')(\\s+\\d+\\w)/gi, 'url($1)$2');\n      }\n      return fixed;\n    }\n  }]);\n  return ImageSet;\n}(Value);\nImageSet.names = ['image-set'];\nmodule.exports = ImageSet;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":1,"column":4},"name":"Value"},{"generated":{"line":14,"column":9},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":1,"column":9}},{"generated":{"line":14,"column":12},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":1,"column":12},"name":"require"},{"generated":{"line":14,"column":19},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":1,"column":19}},{"generated":{"line":14,"column":20},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":1,"column":20}},{"generated":{"line":14,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":1,"column":30}},{"generated":{"line":14,"column":31},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":1,"column":31}},{"generated":{"line":15,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":1,"column":31}},{"generated":{"line":15,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":6},"name":"ImageSet"},{"generated":{"line":15,"column":12},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":16,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":17,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":18,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":19,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":20,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":21,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":22,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":23,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":24,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":14}},{"generated":{"line":25,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":4,"column":2}},{"generated":{"line":26,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":5,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":6,"column":0}},{"generated":{"line":28,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":7,"column":2}},{"generated":{"line":28,"column":21},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":7,"column":10},"name":"string"},{"generated":{"line":28,"column":27},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":7,"column":16}},{"generated":{"line":28,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":7,"column":18},"name":"prefix"},{"generated":{"line":28,"column":35},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":7,"column":24}},{"generated":{"line":28,"column":37},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":7,"column":26}},{"generated":{"line":29,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":8,"column":4}},{"generated":{"line":29,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":8,"column":8},"name":"fixed"},{"generated":{"line":29,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":8,"column":13}},{"generated":{"line":29,"column":88},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":8,"column":30},"name":"string"},{"generated":{"line":29,"column":94},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":8,"column":36}},{"generated":{"line":29,"column":96},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":8,"column":38},"name":"prefix"},{"generated":{"line":29,"column":102},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":8,"column":44}},{"generated":{"line":29,"column":103},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":8,"column":45}},{"generated":{"line":30,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":9,"column":4}},{"generated":{"line":30,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":9,"column":8},"name":"prefix"},{"generated":{"line":30,"column":16},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":9,"column":14}},{"generated":{"line":30,"column":21},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":9,"column":19}},{"generated":{"line":30,"column":31},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":9,"column":29}},{"generated":{"line":30,"column":33},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":9,"column":31}},{"generated":{"line":31,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":6},"name":"fixed"},{"generated":{"line":31,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":11}},{"generated":{"line":31,"column":16},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":14},"name":"fixed"},{"generated":{"line":31,"column":21},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":19}},{"generated":{"line":31,"column":22},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":20},"name":"replace"},{"generated":{"line":31,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":27}},{"generated":{"line":31,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":28}},{"generated":{"line":31,"column":61},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":59}},{"generated":{"line":31,"column":63},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":61}},{"generated":{"line":31,"column":74},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":72}},{"generated":{"line":31,"column":75},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":10,"column":73}},{"generated":{"line":32,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":11,"column":4}},{"generated":{"line":33,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":12,"column":4}},{"generated":{"line":33,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":12,"column":11},"name":"fixed"},{"generated":{"line":33,"column":18},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":12,"column":16}},{"generated":{"line":34,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":13,"column":2}},{"generated":{"line":35,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":13,"column":3}},{"generated":{"line":36,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":13,"column":3}},{"generated":{"line":37,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":13,"column":3}},{"generated":{"line":37,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":23},"name":"Value"},{"generated":{"line":37,"column":7},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":3,"column":28}},{"generated":{"line":38,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":16,"column":0},"name":"ImageSet"},{"generated":{"line":38,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":16,"column":8}},{"generated":{"line":38,"column":9},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":16,"column":9},"name":"names"},{"generated":{"line":38,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":16,"column":14}},{"generated":{"line":38,"column":17},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":16,"column":17}},{"generated":{"line":38,"column":18},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":16,"column":18}},{"generated":{"line":38,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":16,"column":29}},{"generated":{"line":38,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":16,"column":30}},{"generated":{"line":39,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":18,"column":0},"name":"module"},{"generated":{"line":39,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":18,"column":6}},{"generated":{"line":39,"column":7},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":18,"column":7},"name":"exports"},{"generated":{"line":39,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":18,"column":14}},{"generated":{"line":39,"column":17},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":18,"column":17},"name":"ImageSet"},{"generated":{"line":39,"column":25},"source":"../node_modules/autoprefixer/lib/hacks/image-set.js","original":{"line":18,"column":25}}],"sources":{"../node_modules/autoprefixer/lib/hacks/image-set.js":"let Value = require('../value')\n\nclass ImageSet extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace(string, prefix) {\n    let fixed = super.replace(string, prefix)\n    if (prefix === '-webkit-') {\n      fixed = fixed.replace(/(\"[^\"]+\"|'[^']+')(\\s+\\d+\\w)/gi, 'url($1)$2')\n    }\n    return fixed\n  }\n}\n\nImageSet.names = ['image-set']\n\nmodule.exports = ImageSet\n"},"lineCount":null}},"error":null,"hash":"5ef3f03130a75c6aa0111d74ee664f35","cacheData":{"env":{}}}