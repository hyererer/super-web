{"id":"../node_modules/autoprefixer/lib/hacks/break-props.js","dependencies":[{"name":"C:\\Users\\szb15\\will-it-miss\\package.json","includedInParent":true,"mtime":1667963388292},{"name":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\package.json","includedInParent":true,"mtime":1667963073346},{"name":"../declaration","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\hacks\\break-props.js","resolved":"C:\\Users\\szb15\\will-it-miss\\node_modules\\autoprefixer\\lib\\declaration.js"}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar Declaration = require('../declaration');\nvar BreakProps = /*#__PURE__*/function (_Declaration) {\n  _inherits(BreakProps, _Declaration);\n  var _super = _createSuper(BreakProps);\n  function BreakProps() {\n    _classCallCheck(this, BreakProps);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BreakProps, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Change name for -webkit- and -moz- prefix\n     */\n    function prefixed(prop, prefix) {\n      return \"\".concat(prefix, \"column-\").concat(prop);\n    }\n\n    /**\n     * Return property name by final spec\n     */\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      if (prop.includes('inside')) {\n        return 'break-inside';\n      }\n      if (prop.includes('before')) {\n        return 'break-before';\n      }\n      return 'break-after';\n    }\n\n    /**\n     * Change prefixed value for avoid-column and avoid-page\n     */\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      if (decl.prop === 'break-inside' && decl.value === 'avoid-column' || decl.value === 'avoid-page') {\n        decl.value = 'avoid';\n      }\n      return _get(_getPrototypeOf(BreakProps.prototype), \"set\", this).call(this, decl, prefix);\n    }\n\n    /**\n     * Donâ€™t prefix some values\n     */\n  }, {\n    key: \"insert\",\n    value: function insert(decl, prefix, prefixes) {\n      if (decl.prop !== 'break-inside') {\n        return _get(_getPrototypeOf(BreakProps.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      }\n      if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n        return undefined;\n      }\n      return _get(_getPrototypeOf(BreakProps.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n    }\n  }]);\n  return BreakProps;\n}(Declaration);\nBreakProps.names = ['break-inside', 'page-break-inside', 'column-break-inside', 'break-before', 'page-break-before', 'column-break-before', 'break-after', 'page-break-after', 'column-break-after'];\nmodule.exports = BreakProps;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":1,"column":4},"name":"Declaration"},{"generated":{"line":14,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":1,"column":15}},{"generated":{"line":14,"column":18},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":1,"column":18},"name":"require"},{"generated":{"line":14,"column":25},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":1,"column":25}},{"generated":{"line":14,"column":26},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":1,"column":26}},{"generated":{"line":14,"column":42},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":1,"column":42}},{"generated":{"line":14,"column":43},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":1,"column":43}},{"generated":{"line":15,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":1,"column":43}},{"generated":{"line":15,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":6},"name":"BreakProps"},{"generated":{"line":15,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":16,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":17,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":18,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":19,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":20,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":21,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":22,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":23,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":24,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":16}},{"generated":{"line":25,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":4,"column":2}},{"generated":{"line":26,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":5,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":6,"column":0}},{"generated":{"line":28,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":7,"column":2}},{"generated":{"line":28,"column":22},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":7,"column":11},"name":"prop"},{"generated":{"line":28,"column":26},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":7,"column":15}},{"generated":{"line":28,"column":28},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":7,"column":17},"name":"prefix"},{"generated":{"line":28,"column":34},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":7,"column":23}},{"generated":{"line":28,"column":36},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":7,"column":25}},{"generated":{"line":29,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":8,"column":4}},{"generated":{"line":29,"column":23},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":8,"column":14},"name":"prefix"},{"generated":{"line":29,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":8,"column":20}},{"generated":{"line":29,"column":49},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":8,"column":30},"name":"prop"},{"generated":{"line":29,"column":53},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":8,"column":34}},{"generated":{"line":30,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":9,"column":2}},{"generated":{"line":32,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":11,"column":2}},{"generated":{"line":33,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":12,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":13,"column":0}},{"generated":{"line":35,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":11,"column":2}},{"generated":{"line":36,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":11,"column":2}},{"generated":{"line":37,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":11,"column":2}},{"generated":{"line":37,"column":11},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":14,"column":2}},{"generated":{"line":37,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":14,"column":12},"name":"prop"},{"generated":{"line":37,"column":34},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":14,"column":16}},{"generated":{"line":37,"column":36},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":14,"column":18}},{"generated":{"line":38,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":15,"column":4}},{"generated":{"line":38,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":15,"column":8},"name":"prop"},{"generated":{"line":38,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":15,"column":12}},{"generated":{"line":38,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":15,"column":13},"name":"includes"},{"generated":{"line":38,"column":23},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":15,"column":21}},{"generated":{"line":38,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":15,"column":22}},{"generated":{"line":38,"column":32},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":15,"column":30}},{"generated":{"line":38,"column":33},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":15,"column":31}},{"generated":{"line":38,"column":35},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":15,"column":33}},{"generated":{"line":39,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":16,"column":6}},{"generated":{"line":39,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":16,"column":13}},{"generated":{"line":39,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":16,"column":27}},{"generated":{"line":40,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":17,"column":4}},{"generated":{"line":41,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":18,"column":4}},{"generated":{"line":41,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":18,"column":8},"name":"prop"},{"generated":{"line":41,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":18,"column":12}},{"generated":{"line":41,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":18,"column":13},"name":"includes"},{"generated":{"line":41,"column":23},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":18,"column":21}},{"generated":{"line":41,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":18,"column":22}},{"generated":{"line":41,"column":32},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":18,"column":30}},{"generated":{"line":41,"column":33},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":18,"column":31}},{"generated":{"line":41,"column":35},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":18,"column":33}},{"generated":{"line":42,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":19,"column":6}},{"generated":{"line":42,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":19,"column":13}},{"generated":{"line":42,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":19,"column":27}},{"generated":{"line":43,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":20,"column":4}},{"generated":{"line":44,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":21,"column":4}},{"generated":{"line":44,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":21,"column":11}},{"generated":{"line":44,"column":26},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":21,"column":24}},{"generated":{"line":45,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":22,"column":2}},{"generated":{"line":47,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":24,"column":2}},{"generated":{"line":48,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":25,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":26,"column":0}},{"generated":{"line":50,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":24,"column":2}},{"generated":{"line":51,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":24,"column":2}},{"generated":{"line":52,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":24,"column":2}},{"generated":{"line":52,"column":11},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":27,"column":2}},{"generated":{"line":52,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":27,"column":6},"name":"decl"},{"generated":{"line":52,"column":28},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":27,"column":10}},{"generated":{"line":52,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":27,"column":12},"name":"prefix"},{"generated":{"line":52,"column":36},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":27,"column":18}},{"generated":{"line":52,"column":38},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":27,"column":20}},{"generated":{"line":53,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":28,"column":4}},{"generated":{"line":53,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":7},"name":"decl"},{"generated":{"line":53,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":11}},{"generated":{"line":53,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":12},"name":"prop"},{"generated":{"line":53,"column":19},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":16}},{"generated":{"line":53,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":21}},{"generated":{"line":53,"column":38},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":35}},{"generated":{"line":53,"column":42},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":39},"name":"decl"},{"generated":{"line":53,"column":46},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":43}},{"generated":{"line":53,"column":47},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":44},"name":"value"},{"generated":{"line":53,"column":52},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":49}},{"generated":{"line":53,"column":57},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":54}},{"generated":{"line":53,"column":71},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":29,"column":68}},{"generated":{"line":53,"column":75},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":30,"column":6},"name":"decl"},{"generated":{"line":53,"column":79},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":30,"column":10}},{"generated":{"line":53,"column":80},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":30,"column":11},"name":"value"},{"generated":{"line":53,"column":85},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":30,"column":16}},{"generated":{"line":53,"column":90},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":30,"column":21}},{"generated":{"line":53,"column":102},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":30,"column":33}},{"generated":{"line":53,"column":104},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":31,"column":6}},{"generated":{"line":54,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":32,"column":6},"name":"decl"},{"generated":{"line":54,"column":12},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":32,"column":10}},{"generated":{"line":54,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":32,"column":11},"name":"value"},{"generated":{"line":54,"column":18},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":32,"column":16}},{"generated":{"line":54,"column":21},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":32,"column":19}},{"generated":{"line":54,"column":28},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":32,"column":26}},{"generated":{"line":55,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":33,"column":4}},{"generated":{"line":56,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":34,"column":4}},{"generated":{"line":56,"column":81},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":34,"column":21},"name":"decl"},{"generated":{"line":56,"column":85},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":34,"column":25}},{"generated":{"line":56,"column":87},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":34,"column":27},"name":"prefix"},{"generated":{"line":56,"column":93},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":34,"column":33}},{"generated":{"line":57,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":35,"column":2}},{"generated":{"line":59,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":37,"column":2}},{"generated":{"line":60,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":38,"column":0}},{"generated":{"line":61,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":39,"column":0}},{"generated":{"line":62,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":37,"column":2}},{"generated":{"line":63,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":37,"column":2}},{"generated":{"line":64,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":37,"column":2}},{"generated":{"line":64,"column":11},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":40,"column":2}},{"generated":{"line":64,"column":27},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":40,"column":9},"name":"decl"},{"generated":{"line":64,"column":31},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":40,"column":13}},{"generated":{"line":64,"column":33},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":40,"column":15},"name":"prefix"},{"generated":{"line":64,"column":39},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":40,"column":21}},{"generated":{"line":64,"column":41},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":40,"column":23},"name":"prefixes"},{"generated":{"line":64,"column":49},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":40,"column":31}},{"generated":{"line":64,"column":51},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":40,"column":33}},{"generated":{"line":65,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":41,"column":4}},{"generated":{"line":65,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":41,"column":8},"name":"decl"},{"generated":{"line":65,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":41,"column":12}},{"generated":{"line":65,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":41,"column":13},"name":"prop"},{"generated":{"line":65,"column":19},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":41,"column":17}},{"generated":{"line":65,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":41,"column":22}},{"generated":{"line":65,"column":38},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":41,"column":36}},{"generated":{"line":65,"column":40},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":41,"column":38}},{"generated":{"line":66,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":42,"column":6}},{"generated":{"line":66,"column":86},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":42,"column":26},"name":"decl"},{"generated":{"line":66,"column":90},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":42,"column":30}},{"generated":{"line":66,"column":92},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":42,"column":32},"name":"prefix"},{"generated":{"line":66,"column":98},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":42,"column":38}},{"generated":{"line":66,"column":100},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":42,"column":40},"name":"prefixes"},{"generated":{"line":66,"column":108},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":42,"column":48}},{"generated":{"line":67,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":43,"column":4}},{"generated":{"line":68,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":4}},{"generated":{"line":68,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":8}},{"generated":{"line":68,"column":19},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":17}},{"generated":{"line":68,"column":20},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":18},"name":"test"},{"generated":{"line":68,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":22}},{"generated":{"line":68,"column":25},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":23},"name":"decl"},{"generated":{"line":68,"column":29},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":27}},{"generated":{"line":68,"column":30},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":28},"name":"value"},{"generated":{"line":68,"column":35},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":33}},{"generated":{"line":68,"column":36},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":34}},{"generated":{"line":68,"column":40},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":38}},{"generated":{"line":68,"column":47},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":45}},{"generated":{"line":68,"column":48},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":46},"name":"test"},{"generated":{"line":68,"column":52},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":50}},{"generated":{"line":68,"column":53},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":51},"name":"decl"},{"generated":{"line":68,"column":57},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":55}},{"generated":{"line":68,"column":58},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":56},"name":"value"},{"generated":{"line":68,"column":63},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":61}},{"generated":{"line":68,"column":64},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":62}},{"generated":{"line":68,"column":66},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":44,"column":64}},{"generated":{"line":69,"column":8},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":45,"column":6}},{"generated":{"line":69,"column":15},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":45,"column":13},"name":"undefined"},{"generated":{"line":69,"column":24},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":45,"column":22}},{"generated":{"line":70,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":46,"column":4}},{"generated":{"line":71,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":47,"column":4}},{"generated":{"line":71,"column":84},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":47,"column":24},"name":"decl"},{"generated":{"line":71,"column":88},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":47,"column":28}},{"generated":{"line":71,"column":90},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":47,"column":30},"name":"prefix"},{"generated":{"line":71,"column":96},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":47,"column":36}},{"generated":{"line":71,"column":98},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":47,"column":38},"name":"prefixes"},{"generated":{"line":71,"column":106},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":47,"column":46}},{"generated":{"line":72,"column":4},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":48,"column":2}},{"generated":{"line":73,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":48,"column":3}},{"generated":{"line":74,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":48,"column":3}},{"generated":{"line":75,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":48,"column":3}},{"generated":{"line":75,"column":2},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":25},"name":"Declaration"},{"generated":{"line":75,"column":13},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":3,"column":36}},{"generated":{"line":76,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":51,"column":0},"name":"BreakProps"},{"generated":{"line":76,"column":10},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":51,"column":10}},{"generated":{"line":76,"column":11},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":51,"column":11},"name":"names"},{"generated":{"line":76,"column":16},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":51,"column":16}},{"generated":{"line":76,"column":19},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":51,"column":19}},{"generated":{"line":76,"column":20},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":52,"column":2}},{"generated":{"line":76,"column":34},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":52,"column":16}},{"generated":{"line":76,"column":36},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":53,"column":2}},{"generated":{"line":76,"column":55},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":53,"column":21}},{"generated":{"line":76,"column":57},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":54,"column":2}},{"generated":{"line":76,"column":78},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":54,"column":23}},{"generated":{"line":76,"column":80},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":55,"column":2}},{"generated":{"line":76,"column":94},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":55,"column":16}},{"generated":{"line":76,"column":96},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":56,"column":2}},{"generated":{"line":76,"column":115},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":56,"column":21}},{"generated":{"line":76,"column":117},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":57,"column":2}},{"generated":{"line":76,"column":138},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":57,"column":23}},{"generated":{"line":76,"column":140},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":58,"column":2}},{"generated":{"line":76,"column":153},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":58,"column":15}},{"generated":{"line":76,"column":155},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":59,"column":2}},{"generated":{"line":76,"column":173},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":59,"column":20}},{"generated":{"line":76,"column":175},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":60,"column":2}},{"generated":{"line":76,"column":195},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":60,"column":22}},{"generated":{"line":76,"column":196},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":61,"column":1}},{"generated":{"line":77,"column":0},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":63,"column":0},"name":"module"},{"generated":{"line":77,"column":6},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":63,"column":6}},{"generated":{"line":77,"column":7},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":63,"column":7},"name":"exports"},{"generated":{"line":77,"column":14},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":63,"column":14}},{"generated":{"line":77,"column":17},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":63,"column":17},"name":"BreakProps"},{"generated":{"line":77,"column":27},"source":"../node_modules/autoprefixer/lib/hacks/break-props.js","original":{"line":63,"column":27}}],"sources":{"../node_modules/autoprefixer/lib/hacks/break-props.js":"let Declaration = require('../declaration')\n\nclass BreakProps extends Declaration {\n  /**\n   * Change name for -webkit- and -moz- prefix\n   */\n  prefixed(prop, prefix) {\n    return `${prefix}column-${prop}`\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize(prop) {\n    if (prop.includes('inside')) {\n      return 'break-inside'\n    }\n    if (prop.includes('before')) {\n      return 'break-before'\n    }\n    return 'break-after'\n  }\n\n  /**\n   * Change prefixed value for avoid-column and avoid-page\n   */\n  set(decl, prefix) {\n    if (\n      (decl.prop === 'break-inside' && decl.value === 'avoid-column') ||\n      decl.value === 'avoid-page'\n    ) {\n      decl.value = 'avoid'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Donâ€™t prefix some values\n   */\n  insert(decl, prefix, prefixes) {\n    if (decl.prop !== 'break-inside') {\n      return super.insert(decl, prefix, prefixes)\n    }\n    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n      return undefined\n    }\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nBreakProps.names = [\n  'break-inside',\n  'page-break-inside',\n  'column-break-inside',\n  'break-before',\n  'page-break-before',\n  'column-break-before',\n  'break-after',\n  'page-break-after',\n  'column-break-after'\n]\n\nmodule.exports = BreakProps\n"},"lineCount":null}},"error":null,"hash":"e13ae5a98000dbc29618213d9a5853c8","cacheData":{"env":{}}}